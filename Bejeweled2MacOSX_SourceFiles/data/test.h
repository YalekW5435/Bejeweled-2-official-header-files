#ifndef __test_H__#define __test_H__namespace Sexy{	class ResourceManager;	class Image;	class Font;	Image* TestLoadImageById(ResourceManager *theManager, int theId);	bool TestExtractResourcesByName(ResourceManager *theManager, const char *theName);	// LoadingThread Resources	bool TestExtractLoadingThreadResources(ResourceManager *theMgr);	extern int SOUND_BAD;	extern int SOUND_BOMB_EXPLODE;	extern int SOUND_CLICK;	extern int SOUND_COMBO_1;	extern int SOUND_COMBO_2;	extern int SOUND_COMBO_3;	extern int SOUND_COMBO_4;	extern int SOUND_COMBO_5;	extern int SOUND_EXCELLENT;	extern int SOUND_EXPLODE;	extern int SOUND_FAIRY_DUST;	extern int SOUND_FIRE_CRACKLE;	extern int SOUND_GAME_OVER;	extern int SOUND_GEM_HIT;	extern int SOUND_GO;	extern int SOUND_LEVEL_UP;	extern int SOUND_MENU_CLICK;	extern int SOUND_MULTISHOT;	extern int SOUND_SELECT;	extern int SOUND_TRANSFER;	extern int SOUND_TRANSFER_BIG;	extern int SOUND_WARNING;	extern int SOUND_WHIRLPOOL;	enum TestResourceId	{		SOUND_TRANSFER_ID,		SOUND_TRANSFER_BIG_ID,		SOUND_COMBO_1_ID,		SOUND_COMBO_2_ID,		SOUND_COMBO_3_ID,		SOUND_COMBO_4_ID,		SOUND_COMBO_5_ID,		SOUND_BAD_ID,		SOUND_GEM_HIT_ID,		SOUND_EXPLODE_ID,		SOUND_CLICK_ID,		SOUND_SELECT_ID,		SOUND_MENU_CLICK_ID,		SOUND_MULTISHOT_ID,		SOUND_GO_ID,		SOUND_LEVEL_UP_ID,		SOUND_GAME_OVER_ID,		SOUND_FIRE_CRACKLE_ID,		SOUND_WARNING_ID,		SOUND_WHIRLPOOL_ID,		SOUND_EXCELLENT_ID,		SOUND_BOMB_EXPLODE_ID,		SOUND_FAIRY_DUST_ID,		TestRESOURCE_ID_MAX	};	Image* TestGetImageById(int theId);	Font* TestGetFontById(int theId);	int TestGetSoundById(int theId);	const char* TestGetStringIdById(int theId);} // namespace Sexy#endif