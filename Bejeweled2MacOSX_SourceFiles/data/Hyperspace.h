#ifndef __HYPERSPACE_H__#define __HYPERSPACE_H__#include "../SexyAppFramework/Widget.h"namespace Sexy{class WinDMApp;#define NUM_HYPER_RINGS 24#define NUM_RING_POINTS 24struct HyperPoint{	float mX;	float mY;		float mU[2];	float mV[2];};struct HyperRing{	float mFromX; // Center	float mFromY;	float mToX; // Center	float mToY;	float mCurX;	float mCurY;	float mCurScreenX;	float mCurScreenY;	float mCurScreenRadius;		float mFromRot;	float mToRot;	HyperPoint mHyperPoints[NUM_RING_POINTS];};#define NUM_FLOATING_THINGS 2class FloatingThing{public:	bool mUsed;	float mScale;	float mScaleAdd;	float mRot;	float mRotAdd;	float mX;	float mY;	float mAddX;	float mAddY;	Image* mImage;public:	FloatingThing()	{		mUsed = false;	}};class WarpLine{public:	int mX;		float mFrontOffset;	float mBackOffset;	float mFrontOffsetVel;	float mBackOffsetVel;};typedef std::vector<WarpLine> WarpLineVector;class Hyperspace : public Widget{public:	bool					mIs3d;	FloatingThing			mFloatingThings[NUM_FLOATING_THINGS];	WinDMApp*				mApp;	HyperRing				mHyperRings[NUM_HYPER_RINGS];	float					mRingRotAcc;	float					mRingRotAcc2;	float					mRingXAcc;	float					mRingXAcc2;	float					mRingYAcc;	float					mRingYAcc2;		float					mCameraX;	float					mCameraY;	float					mScoreFloaterX;	float					mScoreFloaterY;	int						mPortalDelay;	float					mPortalPercent; // 0 - 1	bool					mShowBkg;	int						mFlashState;	int						mFlashDelay;	float					mFlashPercent;	float					mTransPercent; // % between FROM and TO	bool					mIsDone;	int						mDoneDelay;		int						mEndTextPos;	float					mPictureRingPos;		/// 2d stuff	float					mYOffset;	float					mYOffsetVel;	float					mYOffset2;	float					mYOffset2Vel;	int						mEffectUpdate;		float					mWarpLineAcc;	float					mWarpLineAdd;	float					mWarpLineSpeed;	WarpLineVector			mWarpLineVector;	float					mShakeFactor;	float					mStretchFactor;	float					mStretchVel;	bool					mFirstShowBkg;protected:	void					DrawPortal(Graphics* g);	void					Update2d();	void					Update3d();	void					DoUpdate();	void					Draw2dPortal(Graphics* g);	void					Draw3dPortal(Graphics* g);public:	Hyperspace(WinDMApp* theApp);	virtual ~Hyperspace();	virtual void			Update();		virtual	void			Draw(Graphics* g);	};}#endif //__HYPERSPACE_H__