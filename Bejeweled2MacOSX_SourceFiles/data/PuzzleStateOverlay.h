#ifndef __PUZZLESTATEOVERLAY_H__#define __PUZZLESTATEOVERLAY_H__#include "../SexyAppFramework/Widget.h"#include "../SexyAppFramework/ButtonListener.h"#include "CurvedVal.h"namespace Sexy{#define PUZZLESTATE_X 16#define PUZZLESTATE_Y 25class WinDMApp;class MemoryImage;class PodButton;#define NUM_PUZZLE_PODS 5#define BOARD_IMAGE_WIDTH 44#define BOARD_IMAGE_HEIGHT 44class PuzzlePod{public:	int						mPodNum;	CurvedVal				mDist; // From center	float					mDistInInc;	int						mMoveDelay;		MemoryImage*			mPuzzleThumbImage;	bool					mCompleted;		int						mGreenLiteDelay;	float					mGreenLitPercentage;			float					mHilitePercentage;public:	PuzzlePod();		virtual ~PuzzlePod();	IntPoint				GetPos();};class PuzzleStateOverlay : public Widget, public ButtonListener{public:	WinDMApp*				mApp;	MemoryImage*			mDomeImage;		PuzzlePod				mPuzzlePods[NUM_PUZZLE_PODS];	int						mPuzzleSelected;	int						mPodOver;	int						mNumPuzzlesSolved;	int						mDomeUpdateDelay;	float					mDomeOpenPercentage;	bool					mDomeChanged;	PodButton*				mGalaxyMapButton;	std::string				mPlanetName;	MemoryImage*			mPlanetNameGlowImage;	float					mDomeFlashPct;	int						mSelectHiliteFlashDelay;	float					mSelectHiliteFlashPercent;	int						mDomeHiliteFlashDelay;	float					mDomeHiliteFlashPercent;protected:	void					GenerateThumbnails();	void					RebuildDomeImage();	public:	PuzzleStateOverlay(WinDMApp* theApp);	virtual ~PuzzleStateOverlay();	virtual void			AddedToManager(WidgetManager* theWidgetManager);	virtual void			RemovedFromManager(WidgetManager* theWidgetManager);	virtual void			Update();	void					DrawBack(Graphics* g);	void					DrawFront(Graphics* g);	virtual void			Draw(Graphics* g); // Already translated		void					Setup(bool explicitJump = false);	int						GetPodAt(int theX, int theY);	bool					MouseOverDome(int theX, int theY);	void					SetPodOver(int thePodNum);		void					SelectPod(int thePodNum);	void					PuzzleCompleted();			//void					SelectNextPuzzle();	virtual void			ButtonPress(int theId);	virtual void			ButtonDepress(int theId);	};}#endif //__PUZZLESTATEOVERLAY_H__