#ifndef __BASESTATEENGINE_H___#define __BASESTATEENGINE_H___#include "../SexyAppFramework/Buffer.h"#define GAMESTATE_IDENTIFIER 0xBAAF9163enum{	WARNING_NONE = 0,	WARNING_IGNORABLE,	WARNING_MINOR,	WARNING_NORMAL,		WARNING_SEVERE};namespace Sexy{class BaseStateEngine : public Buffer{protected:			bool					mInEvent;	std::string				mProdName;	int						mBufferVersion;	int						mNumDataBits;	int						mEventTypeBits;	int						mWarningLevel;	std::string				mWarningDescriptor;	bool					mHasFailed;	std::string				mFailDescriptor;protected: // Helper methods			void					Warning(int theWarningLevel, const std::string& theWarningDescriptor);	void					Fail(const std::string& theFailDescriptor);	void					BeginEvent(int theEventNum);	void					EndEvent();	int						GetNextEventType();		void					ParseHeader();	void					ParseNextEvent();	void					DoParseEvents();	public:	// Public method dudes	void					Init(const std::string& theProdName, int theBufferVersion, int theNumEventTypes);	void					Init(const Buffer& theBuffer); 	bool					HasFailed();	std::string				GetFailDescriptor();	int						GetWarningLevel();	std::string				GetWarningDescriptor();	public: // Overridables		virtual void			ParseEvent(int theEventType) = 0;	virtual std::string		GetPrintableState() = 0;		virtual ulong			GetStateHash() = 0;	public:	BaseStateEngine();	virtual ~BaseStateEngine();};}#endif //__BASESTATEENGINE_H___